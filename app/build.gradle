apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

Properties props = new Properties()
boolean isHasFile = false
File propFile = file('../local.properties')
if (propFile.exists()) {
    isHasFile = true
    props.load(new FileInputStream(propFile))
}

// query git for the SHA, Tag and commit count. Use these to automate versioning.
def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitTag = 'git describe --tags'.execute([], project.rootDir).text.trim()
def gitCommitCount = 100 +
        Integer.parseInt('git rev-list --count HEAD'.execute([], project.rootDir).text.trim())

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    defaultConfig {
        applicationId "cn.imrhj.cowlevel"
        minSdkVersion 21
        targetSdkVersion versions.targetSdk
        versionCode gitCommitCount
        versionName "0.1"
    }

    signingConfigs {
        defaultConfig {
            keyAlias isHasFile ? props['ALIAS_NAME'] : System.getenv("ALIAS_NAME")
            keyPassword isHasFile ? props['ALIAS_PASS'] : System.getenv("ALIAS_PASS")
            storePassword isHasFile ? props['KEYSTORE_PASS'] : System.getenv("KEYSTORE_PASS")
            storeFile isHasFile ? file(props['KEYSTORE_URL']) : file("../.hexer.keystore")
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.defaultConfig
        }

        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.defaultConfig
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    implementation "com.android.support:appcompat-v7:${versions.supportLibrary}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation "com.android.support:support-v13:${versions.supportLibrary}"
    implementation "com.android.support:cardview-v7:${versions.supportLibrary}"
    implementation "com.android.support:customtabs:${versions.supportLibrary}"
    implementation "com.android.support:design:${versions.supportLibrary}"
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.36'
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${versions.glide}"
    implementation 'br.com.simplepass:loading-button-android:1.8.4'
    implementation 'com.elvishew:xlog:1.4.1'
    debugImplementation "com.readystatesoftware.chuck:library:${versions.chunk}"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:${versions.chunk}"

}
